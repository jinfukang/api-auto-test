{"name": "test_login[testcase1]", "status": "broken", "statusDetails": {"message": "KeyError: 'msg'", "trace": "self = <test_user.TestUser object at 0x000002177E827490>\ntestcase = {'extract': [{'token': '$..token'}], 'feature': '不存在的用户名', 'parameterize': [['feature', 'username', 'password', 'code'..., ['密码错误', 'root', 'wj3189021', 200, '密码错误']], 'request': {'json': {'password': 'wj318902', 'username': 'root1'}}, ...}\n\n    @pytest.mark.parametrize(\"testcase\", read_testcase_yaml(\"data/user/login.yaml\"))\n    @pytest.mark.p1\n    def test_login(self, testcase):\n>       RequestUtils(DebugTalk()).standard_yaml(testcase)\n\ntestcase\\test_user.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\request_util.py:30: in standard_yaml\n    assert_result(caseinfo['validate'], res.json())\nutils\\assert_util.py:21: in assert_result\n    raise e\nutils\\assert_util.py:11: in assert_result\n    equals_flag = equal_assert(value, result_json)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpect = {'msg': '用户不存在'}, real = {'code': 201, 'message': '用户不存在'}\n\n    def equal_assert(expect, real):\n        flag = 0\n        for key, value in expect.items():\n            log(\"预期结果：%s\" % expect)\n            log(\"实际结果：%s\" % real)\n            if key == \"code\":\n                if value != real['code']:\n                    flag += 1\n            if key == \"msg\":\n>               if value != real['msg']:\nE               KeyError: 'msg'\n\nutils\\assert_util.py:35: KeyError"}, "attachments": [{"name": "log", "source": "6a759ced-42cc-42ab-86f8-60eb82b86001-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "testcase", "value": "{'feature': '不存在的用户名', 'base_url': '${read_config_yaml(base,url)}', 'request': {'url': '/v1/user/login', 'method': 'post', 'json': {'username': 'root1', 'password': 'wj318902'}}, 'extract': [{'token': '$..token'}], 'validate': [{'equals': {'code': 201}}, {'equals': {'msg': '用户不存在'}}, {'greater': {'time': 2000}}], 'parameterize': [['feature', 'username', 'password', 'code', 'msg'], ['正常登录', 'admin', '123456789', 200, '登录成功'], ['不存在的用户名', 'root1', 'wj318902', 201, '用户不存在'], ['密码错误', 'root', 'wj3189021', 200, '密码错误']]}"}], "start": 1697036948208, "stop": 1697036948273, "uuid": "84a1d3dd-3321-4d0b-aa68-ba727ba853f5", "historyId": "38836a217ac4a808f6339acc3e678768", "testCaseId": "25a1efabb3959119c95787987e4cbb11", "fullName": "testcase.test_user.TestUser#test_login", "labels": [{"name": "tag", "value": "p1"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_user"}, {"name": "subSuite", "value": "TestUser"}, {"name": "host", "value": "PC-20210703LXZF"}, {"name": "thread", "value": "22300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_user"}]}