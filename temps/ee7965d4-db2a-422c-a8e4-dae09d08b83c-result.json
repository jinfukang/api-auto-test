{"name": "test_add[testcase0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_user.TestUser object at 0x000002177E0BF010>\ntestcase = {'extract': [{'id': '$..ID'}], 'feature': '新增用户', 'parameterize': [['feature', 'username', 'password', 'email', 'phone...request': {'json': {'active': 1, 'email': 'admin@qq.com', 'password': '123456789', 'phone': '176123456789', ...}}, ...}\n\n    @pytest.mark.parametrize(\"testcase\", read_testcase_yaml(\"data/user/add_user.yaml\"))\n    @pytest.mark.p1\n    def test_add(self, testcase):\n>       RequestUtils(DebugTalk()).standard_yaml(testcase)\n\ntestcase\\test_user.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\request_util.py:30: in standard_yaml\n    assert_result(caseinfo['validate'], res.json())\nutils\\assert_util.py:21: in assert_result\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpect = [{'equals': {'code': 200}}, {'equals': {'msg': 'success'}}, {'greater': {'time': 2000}}]\nresult_json = {'code': 201, 'data': None, 'msg': '用户名已存在'}\n\n    def assert_result(expect, result_json):\n        try:\n            all_flag = 0\n            for item in expect:\n                for key, value in item.items():\n                    if key == \"equals\":\n                        equals_flag = equal_assert(value, result_json)\n                        all_flag = all_flag + equals_flag\n                    if key == \"contains\":\n                        contains_flag = contains_assert(value, result_json)\n                        all_flag = all_flag + contains_flag\n>           assert all_flag == 0\nE           AssertionError\n\nutils\\assert_util.py:16: AssertionError"}, "attachments": [{"name": "log", "source": "d90d08ee-3d46-4abd-9ec4-be64db433b23-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "testcase", "value": "{'feature': '新增用户', 'base_url': '${read_config_yaml(base,url)}', 'request': {'url': '/v1/user', 'method': 'post', 'json': {'username': 'admin', 'password': '123456789', 'email': 'admin@qq.com', 'phone': '176123456789', 'active': 1}}, 'extract': [{'id': '$..ID'}], 'validate': [{'equals': {'code': 200}}, {'equals': {'msg': 'success'}}, {'greater': {'time': 2000}}], 'parameterize': [['feature', 'username', 'password', 'email', 'phone', 'active', 'code', 'msg'], ['新增用户', 'admin', '123456789', 'admin@qq.com', '176123456789', 1, 200, 'success'], ['新增重复用户', 'dsfsdf', '123456789', 'sdfs@qq.com', '13234324', 1, 201, '用户名已存在'], ['新增用户-缺少name', '', '123456789', 'sdfs@qq.com', '13234324', 1, 400, '用户名、密码、邮箱、手机号码不能为空'], ['新增用户-缺少password', 'dsfsdf', '', 'sdfs@qq.com', '13234324', 1, 400, '用户名、密码、邮箱、手机号码不能为空'], ['新增用户-缺少email', 'dsfsdf', '123456789', '', '13234324', 1, 400, '用户名、密码、邮箱、手机号码不能为空'], ['新增用户-缺少phone', 'dsfsdf', '123456789', 'sdfs@qq.com', '', 1, 400, '用户名、密码、邮箱、手机号码不能为空']]}"}], "start": 1697036947614, "stop": 1697036947681, "uuid": "694861bf-2426-4dfb-b4b5-b759b92cd62e", "historyId": "df3764c1b3bb78e6dcb7eade21410280", "testCaseId": "1daeaa48ab88ecc9c9071c52ecebfb95", "fullName": "testcase.test_user.TestUser#test_add", "labels": [{"name": "tag", "value": "p1"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_user"}, {"name": "subSuite", "value": "TestUser"}, {"name": "host", "value": "PC-20210703LXZF"}, {"name": "thread", "value": "22300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_user"}]}